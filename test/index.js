'use strict';

const { assert } = require('chai');

const hasFunctionTest = (subject) => {
  return (property) => {
    it(`has function "${property}"`, function () {
      assert.ok(subject);
      assert.property(subject, property);
      assert.isFunction(subject[property]);
    });
  };
};

const commodus = require('../index');

describe('commodus', function () {
  ([
    'uuid',
    'yn',
    'y',
    'n',
    'not',
    'and',
    'or',
    'noop',
    'attempt',
    'range',
    'all',
    'any',
    'forEach',
    'find',
    'includes',
    'reduce',
    'filter',
    'reject',
    'size',
    'get',
    'set',
    'has',
    'update',
    'unset',
    'keys',
    'values',
    'mapKeys',
    'mapValues',
    'defaults',
    'pick',
    'only',
    'entries',
    'transform',
    'toCamelCase',
    'toSnakeCase',
    'toKebabCase',
    'toPascalCase',
    'trim',
    'words',
    'debounce',
    'delay',
    'memoize',
    'negate',
    'once',
    'throttle',
    'unary',
    'isArray',
    'isBool',
    'isBoolean',
    'isBuffer',
    'isDate',
    'isEmpty',
    'isNonEmptyString',
    'isError',
    'isFunc',
    'isFunction',
    'isInteger',
    'isMap',
    'isNan',
    'isNaN',
    'isNil',
    'isNull',
    'isNumber',
    'isObject',
    'isPlainObject',
    'isRegex',
    'isRegExp',
    'isSet',
    'isStream',
    'isString',
    'isSymbol',
    'isTypedArray',
    'isUndefined',
    'isWeakMap',
    'isWeakSet',
    'toArray',
    'toInteger',
    'toNumber',
    'toPlainObject',
    'toString',
    'toPairs',
    'fromPairs',
    'now',
    'iso',
    'timestamp',
    'isExisty',
    'isFalsey',
    'isTruthy',
    'isAffirmative',
    'isAlphaNumeric',
    'isCreditCard',
    'isEmail',
    'isHexaDecimal',
    'isHexadecimal',
    'isISO',
    'isIso',
    'isIPV4',
    'isIPv4',
    'isIpv4',
    'isIPV6',
    'IPv6',
    'isIpv6',
    'isIpAddress',
    'isIP',
    'isIp',
    'isJWT',
    'isJwt',
    'isPhoneNumber',
    'isPhone',
    'isSocialSecurityNumber',
    'isSSN',
    'isURL',
    'isUrl',
    'isUuidStrict',
    'isUUID',
    'isUuid',
    'isZipCode',
    'isZipcode',
    'randomstring',
  ]).forEach(hasFunctionTest(commodus));

});

describe('is.js', function () {
  ([
    'affirmation',
    'alphanumeric',
    'creditcard',
    'email',
    'hexadecimal',
    'iso',
    'ipv4',
    'ipv6',
    'ip',
    'jwt',
    'phone',
    'ssn',
    'url',
    'uuid',
    'zipcode',
    'array',
    'boolean',
    'bool',
    'buffer',
    'date',
    'empty',
    'nonEmptyString',
    'error',
    'function',
    'func',
    'fn',
    'integer',
    'int',
    'nan',
    'nil',
    'null',
    'number',
    'object',
    'plainObject',
    'pojo',
    'regexp',
    'regex',
    'stream',
    'string',
    'symbol',
    'undefined',
    'existy',
    'falsey',
    'truthy',
    'positive',
    'negative',
    'even',
    'odd',
    'decimal',
    'infinite',
    'finite',
  ]).forEach(hasFunctionTest(commodus.is));

});
